{"uid":"17548136ba429d6d","name":"test_case[dic4]","fullName":"testCase.test_case.TestCase#test_case","historyId":"c42786b862befbb122e2cb1c546ddd71","time":{"start":1683367215939,"stop":1683367215939,"duration":0},"status":"broken","statusMessage":"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'","statusTrace":"self = <testCase.test_case.TestCase object at 0x10c2875b0>\ndic = {'caseid': 1.0, 'expect': \"{'errorCode':'0'}\", 'header': '{\"cookie\":\"${Set-Cookie}\"}', 'id': 5.0, ...}\n\n    @pytest.mark.parametrize(\"dic\", test_data)\n    def test_case(self, dic):\n        logger.debug(f\"====>{dic}\")\n        # 判断是否有依赖,执行依赖接口替换依赖字段\n        ps = PreSolve(test_data)\n>       dic[\"header\"], dic[\"value\"] = ps.run_pre(dic)\n\ntestCase/test_case.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.preSolve.PreSolve object at 0x10c262bc0>\ncaseid = {'caseid': 1.0, 'expect': \"{'errorCode':'0'}\", 'header': '{\"cookie\":\"${Set-Cookie}\"}', 'id': 5.0, ...}\ngoal_header = None, goal_body = None\n\n    def run_pre(self, caseid, goal_header = None,goal_body =None):\n        # 4.1准备前置用例请求所需要的数据\n>       data = self.testdata[int(caseid)-1]\nE       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'\n\ncommon/preSolve.py:87: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'","statusTrace":"self = <testCase.test_case.TestCase object at 0x10c2875b0>\ndic = {'caseid': 1.0, 'expect': \"{'errorCode':'0'}\", 'header': '{\"cookie\":\"${Set-Cookie}\"}', 'id': 5.0, ...}\n\n    @pytest.mark.parametrize(\"dic\", test_data)\n    def test_case(self, dic):\n        logger.debug(f\"====>{dic}\")\n        # 判断是否有依赖,执行依赖接口替换依赖字段\n        ps = PreSolve(test_data)\n>       dic[\"header\"], dic[\"value\"] = ps.run_pre(dic)\n\ntestCase/test_case.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.preSolve.PreSolve object at 0x10c262bc0>\ncaseid = {'caseid': 1.0, 'expect': \"{'errorCode':'0'}\", 'header': '{\"cookie\":\"${Set-Cookie}\"}', 'id': 5.0, ...}\ngoal_header = None, goal_body = None\n\n    def run_pre(self, caseid, goal_header = None,goal_body =None):\n        # 4.1准备前置用例请求所需要的数据\n>       data = self.testdata[int(caseid)-1]\nE       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'dict'\n\ncommon/preSolve.py:87: TypeError","steps":[],"attachments":[{"uid":"647d736fb1990e86","name":"log","source":"647d736fb1990e86.txt","type":"text/plain","size":310}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"testCase"},{"name":"suite","value":"test_case"},{"name":"subSuite","value":"TestCase"},{"name":"host","value":"liushadeMBP"},{"name":"thread","value":"9400-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCase.test_case"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"dic","value":"{'id': 5.0, 'interfaceUrl': 'https://www.wanandroid.com/lg/collect/addtool/json', 'name': 'collect', 'method': 'post', 'value': \"{'name':'${username}','link':'www.baidu.com'}\", 'header': '{\"cookie\":\"${Set-Cookie}\"}', 'rely': 'y', 'caseid': 1.0, 'expect': \"{'errorCode':'0'}\"}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"17548136ba429d6d.json","parameterValues":["{'id': 5.0, 'interfaceUrl': 'https://www.wanandroid.com/lg/collect/addtool/json', 'name': 'collect', 'method': 'post', 'value': \"{'name':'${username}','link':'www.baidu.com'}\", 'header': '{\"cookie\":\"${Set-Cookie}\"}', 'rely': 'y', 'caseid': 1.0, 'expect': \"{'errorCode':'0'}\"}"]}