{"name": "test_case[dic1]", "status": "failed", "statusDetails": {"message": "AssertionError: 预期结果与实际不符合：预期结果0,实际结果-1", "trace": "self = <testCase.test_case.TestCase object at 0x10fdcea10>\ndic = {'caseid': '', 'expect': \"{'errorCode':'0'}\", 'header': '{}', 'id': 2.0, ...}\n\n    @pytest.mark.parametrize(\"dic\", test_data)\n    def test_case(self, dic):\n        logger.debug(f\"====>{dic}\")\n        # 判断是否有依赖,执行依赖接口替换依赖字段\n        ps = PreSolve(test_data)\n        dic[\"header\"], dic[\"value\"] = ps.presolve(dic)\n        # 实例化\n        ch = ConfigHttp(dic)\n        # 调用实例方法\n        res = ch.run()\n        # 实例化\n        pa = PublicAssert(dic, res)\n        # 调用实例方法断言\n>       pa.public_assert()\n\ntestCase/test_case.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.publicAssertion.PublicAssert object at 0x10fdcffa0>\n\n    def public_assert(self):\n        # 2.1断言状态码是否正确\n        assert self.status_code in [200, 304], f\"请求失败响应状态码为:{self.status_code}\"\n        # 2.2循环断言字典里的键值对\n        for k, v in self.expect.items():\n            # 2.2.1根据取出的键获取返回结果内实际结果\n            print(f\"实际结果:{k}:{v}\")\n            real = jsonpath(self.res, \"$..\"+k)[0]\n            # 2.2.2断言取到的实际结果和预期结果是否相同\n>           assert str(real) == str(v), f\"预期结果与实际不符合：预期结果{str(v)},实际结果{str(real)}\"\nE           AssertionError: 预期结果与实际不符合：预期结果0,实际结果-1\n\ncommon/publicAssertion.py:38: AssertionError"}, "attachments": [{"name": "log", "source": "5b191251-326a-4343-b3fd-4f786649eb9e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "dic", "value": "{'id': 2.0, 'interfaceUrl': 'https://www.wanandroid.com/user/register', 'name': 'register', 'method': 'post', 'value': \"{'username':'liusha1','password':'123456','repassword':'123456'}\", 'header': '{}', 'rely': 'n', 'caseid': '', 'expect': \"{'errorCode':'0'}\"}"}], "start": 1699582066119, "stop": 1699582066866, "uuid": "e7c4b2e6-ceb6-4a3f-a779-cd2b022afa3f", "historyId": "dfee241ea21448f50bca918698a44d02", "testCaseId": "209f11d053c585d4715ae947e91ccf29", "fullName": "testCase.test_case.TestCase#test_case", "labels": [{"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "liushadeMBP"}, {"name": "thread", "value": "72807-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_case"}]}